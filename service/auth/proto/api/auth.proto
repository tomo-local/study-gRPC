syntax = "proto3";

package auth;

option go_package = "auth/grpc/api";

// 認証サービス
service AuthService {
  // ユーザー登録
  rpc Register(RegisterRequest) returns (RegisterResponse);

  // メールアドレス認証
  rpc VerifyEmail(VerifyEmailRequest) returns (VerifyEmailResponse);

  // ログイン
  rpc Login(LoginRequest) returns (LoginResponse);

  // トークン検証
  rpc VerifyToken(VerifyTokenRequest) returns (VerifyTokenResponse);

  // パスワードリセット要求
  rpc RequestPasswordReset(RequestPasswordResetRequest) returns (RequestPasswordResetResponse);

  // パスワードリセット
  rpc ResetPassword(ResetPasswordRequest) returns (ResetPasswordResponse);

  // 認証確認メール再送
  rpc ResendVerificationEmail(ResendVerificationEmailRequest) returns (ResendVerificationEmailResponse);
}

// ユーザー登録リクエスト
message RegisterRequest {
  string email = 1;
  string password = 2;
  string name = 3;
}

// ユーザー登録レスポンス
message RegisterResponse {
  string user_id = 1;
}

// メールアドレス認証リクエスト
message VerifyEmailRequest {
  string token = 1;
}

// メールアドレス認証レスポンス
message VerifyEmailResponse {
}

// ログインリクエスト
message LoginRequest {
  string email = 1;
  string password = 2;
}

// ログインレスポンス
message LoginResponse {
  string access_token = 1;
  string refresh_token = 2;
  User user = 3;
}

// トークン検証リクエスト
message VerifyTokenRequest {
  string token = 1;
}

// トークン検証レスポンス
message VerifyTokenResponse {
  string user_id = 1;
  string email = 2;
  string name = 3;
}

// パスワードリセット要求リクエスト
message RequestPasswordResetRequest {
  string email = 1;
}

// パスワードリセット要求レスポンス
message RequestPasswordResetResponse {
}

// パスワードリセットリクエスト
message ResetPasswordRequest {
  string token = 1;
  string new_password = 2;
}

// パスワードリセットレスポンス
message ResetPasswordResponse {
}

// 認証確認メール再送リクエスト
message ResendVerificationEmailRequest {
  string email = 1;
}

// 認証確認メール再送レスポンス
message ResendVerificationEmailResponse {
}

// ユーザー情報
message User {
  string id = 1;
  string email = 2;
  string name = 3;
  bool email_verified = 4;
  string created_at = 5;
  string updated_at = 6;
}
