version: '3.8'

services:
  # PostgreSQL データベース (共通またはサービス毎)
  auth_postgres:
    image: postgres:15-alpine
    container_name: auth_postgres
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - ./service/auth/database:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d auth_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - microservices_network

  note_postgres:
    image: postgres:15-alpine
    container_name: note_postgres
    environment:
      POSTGRES_DB: notedb
      POSTGRES_USER: noteuser
      POSTGRES_PASSWORD: notepass
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5433:5432"  # 異なるポート
    volumes:
      - ./service/note/database:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U noteuser -d notedb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - microservices_network

  # Auth Service
  auth_service:
    build:
      context: ./service/auth
      dockerfile: docker/Dockerfile
    container_name: auth_service
    environment:
      DB_HOST: auth_postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: auth_db
      DB_SSL_MODE: disable
      SERVER_PORT: 8080
      JWT_SECRET_KEY: microservices-shared-secret-key-change-in-production
      JWT_TOKEN_DURATION_HOURS: 24
    ports:
      - "9001:8080"  # 外側: 9001, 内側: 8080
    depends_on:
      auth_postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8080"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - microservices_network

  # Note Service
  note_service:
    build:
      context: ./service/note
      dockerfile: Dockerfile
    container_name: note_service
    environment:
      # Note service用の環境変数
      DB_HOST: note_postgres
      DB_PORT: 5432
      DB_USER: noteuser
      DB_PASSWORD: notepass
      DB_NAME: notedb
      DB_SSL_MODE: disable
      SERVER_PORT: 8080

      # 認証用の共通設定
      JWT_SECRET_KEY: microservices-shared-secret-key-change-in-production

      # Auth Service接続設定
      AUTH_SERVICE_HOST: auth_service
      AUTH_SERVICE_PORT: 8080
      AUTH_SERVICE_URL: auth_service:8080
      AUTH_ENABLED: true
      AUTH_TIMEOUT_SECONDS: 10
    ports:
      - "9002:8080"  # 外側: 9002, 内側: 8080
    depends_on:
      note_postgres:
        condition: service_healthy
      auth_service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8080"]  # 内部ポート8080でチェック
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - microservices_network

networks:
  microservices_network:
    driver: bridge
    name: microservices_network
